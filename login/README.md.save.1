Install mongo db for database

### Useful commands:

#### use nodeauth                         (to create db)
#### db.createCollection('users');        (to create collections)
#### show collections

### Inserting
#### db.users.insert({name: 'Sagun',email:'sagun_90@hotmail.com',
	username:'sagun98',password:'123456'});

### Finding
#### db.users.find();
#### db.users.find().pretty();            (Shows pretty json obj)

### Updating
#### db.users.update({username:'sagun98'},{$set:{email:'sagun@yahoo.com'}});

### Deleting
#### db.users.remove({username:'mike'});


# Starting the NodeAuth project
Necessary modules:
sudo npm -g install express  
sudo npm -g install express-generator
Go to the project folder and run 'express'
Check and add all the dependencies

Then run **express** in the folder to install necessary folders. 

Dependencies needed to install:
##### In the package.json
body-parser  
cookie-parser  
debug  
express  
jade  
morgan  
serve-favicon  


##### Not in the package.json
mongodb  
mongoose (ORM)  
connect-flash  
express-messages  
express-validator  
express-session  
passport     (http://passportjs.org/docs/authenticate) 
passport-local  
passport-http  
multer   (helps in file upload)
bcryptjs  

### Middleware setup

##### MULTER:
var multer = require('multer');  
var upload = multer({dest:'./uploads'});  
  
##### EXPRESS-SESSIONS:
app.use(session({  
	secret:'secret',  
	saveUninitialized: true,  
	resave: true  
}));

##### PASSPORT:  
app.use (passport.initialize());  
app.use(passport.session());  

##### Validator:
Search github for middleware of express-validator and copy paste  
  
##### EXPRESS MESSAGES:  
Search github for middleware of express-messages and copy paste
  

## Views and Layouts  
Include bootstrap css and js  
Set the layout.jade page with header and block content  

#### Route for login and register  
=>users.js in routes  
```bash
router.get('/register', function(req, res, next) {  
  res.render('register',{title:'Register'});  
});  
  
router.get('/login', function(req, res, next) {  
  res.render('login',{title:'Login'});  
});  
```
#### Complete the views of login and register using jade which extends layout
  
  
### REGISTER FORM AND VALIDATION (routes/users.js)
Need a post request to register so:  
But need to require multer to handle uploads
```bash
	var multer = require('multer');  
	var upload = multer({dest:'./uploads'}); 
```

Then for setting the file and post variable to respective names  
```bash
//POST route for register
router.post('/register',upload.single('profileimage'), function(req, res, next) {  
	//Putting values to their own name  
	var name = req.body.name;  
	var email = req.body.email;  
	var username = req.body.username;  
	var password = req.body.password;  
	var password2 = req.body.password2;  

	if (req.file){  
		console.log ('Uploading file');  
		var profileimage = req.file.filename;  
	}  
	else {  
		console.log ('No file uploaded...');  
		var profileimage = 'noimage.jpg';  
	}  
```  

### VALIDATION:  
```bash
	//Form Validator  
	req.checkBody('name','Name field is required').notEmpty();  
	req.checkBody('email','Email field is required').notEmpty();  
	req.checkBody('email','Email is not valid').isEmail();  
	req.checkBody('username','Username field is required').notEmpty();  
	req.checkBody('password','Password field is required').notEmpty();  
	req.checkBody('password2','Passwords donot match').equals(req.body.password);  

	// Check Errors  
	var errors = req.validationErrors();  
	if (errors){  
		res.render('register',{  
			errors: errors  
		});  
	}  
	// Else create an object of new User(the User model will the exported below)
	else {  
		var newUser = new User({  
			name: name,  
			email:email,  
			username:username,  
			password:password,  
			profileimage:profileimage  
		});  
```  

If there is any error and we need to spit out the error in the views,
<under p tag of register.jade>  
```bash
ul.errors
	if errors
		each error, i in errors
			div.alert.alert-danger #{error.msg}
```  
  
If there are no errors then need to spit out the flash message  
```bash
	req.flash('success','You are now registered and
  
  
  
## MODELS AND USER REGISTRATION:  
Create a folder model/users.js
```bash
var mongoose = require ('mongoose');
mongoose.connect('mongodb://localhost/___dbname(nodeauth)___');
var db = mongoose.connection;
var UserSchema = mongoose.Schema({
	username:{
		type: String,
		index:true
	},
	password:{
		type: String
	},
	email:{
		type:String
	},
	name:{
		type:String
	},
	profileimage:{
		type:String
	} 
});

var User = module.exports = mongoose.model('User',UserSchema);  

module.exports.createUser = function(newUser,callback){
	newUser.save(callback);
}
```  
Then require this user model in routes(routes/users.js) as:  
```bash
	var User = require("../models/user");
```  
  
Create a new user in the routes/users.js
```bash
	// Focus on the else block 
	if (errors){
		res.render('register',{
			errors: errors
		});
	}
	else {
		var newUser = new User({
			name: name,
			email:email,
			username:username,
			password:password,
			profileimage:profileimage
		});
	// Creates the new user in the DB
		User.createUser(newUser,function(err,user){
			if (err) throw err;
			console.log(user);
		});

		req.flash('success','You are now registered and now can Login');

		res.location('/');
		res.redirect('/');
	}
